import randomimport pygame# 定义屏幕大小常量SCREEN_RECT = pygame.Rect(0, 0, 480, 700)# 刷新的帧率常量FRAME_PER_SEC = 60# 创建敌机的定时器常量CREATE_ENEMY_EVENT = pygame.USEREVENT# 英雄发射子弹事件定时器常量HERO_FIRE_EVENT = pygame.USEREVENT + 1class GameSprites(pygame.sprite.Sprite):    """飞机大战游戏精灵"""    def __init__(self, image_name, speed=1):        super().__init__()        # 定义对象的属性        self.image = pygame.image.load(image_name)        self.rect = self.image.get_rect()        self.speed = speed    def update(self):        # 在游戏屏幕垂直方向上移动        self.rect.y += self.speedclass BackGround(GameSprites):    """游戏背景精灵"""    def __init__(self, is_alt=False):        # 调用父类的方法设置背景图片        super().__init__("./images/background.png")        # 判断是否交替图像，若是，需要设置初始位置（使用两张背景图交替滚动，实现动画效果）        if is_alt:            self.rect.y = -self.rect.height    def update(self):        # 调用父类方法实现垂直移动        super().update()        # 判断是否移出屏幕，若移出，将图片设置到屏幕的上方        if self.rect.y >= SCREEN_RECT.height:            self.rect.y = -self.rect.heightclass Enemy(GameSprites):    """敌机精灵"""    def __init__(self):        # 调用父类的方法设置敌机图片        super().__init__("./images/enemy1.png")        # 设置敌机的随机速度        self.speed = random.randint(1, 3)        # 设置敌机的随机位置        self.rect.bottom = 0        max_x = SCREEN_RECT.width - self.rect.width        self.rect.x = random.randint(0, max_x)    def update(self):        # 调用父类方法，保持垂直方向飞行        super().update()        # 判断是否飞出屏幕，若是，则从敌机精灵组中删除        if self.rect.y >= SCREEN_RECT.height:            # print('飞出屏幕，从精灵组中删除')            self.kill()    # def __del__(self):    #     print("敌机销毁 %s" % self.rect)class Hero(GameSprites):    """英雄精灵"""    def __init__(self):        # 调用父类的方法设置英雄图片，初始速度        super().__init__("./images/me1.png", 0)        # 设置英雄的初始位置        self.rect.centerx = SCREEN_RECT.centerx        self.rect.bottom = SCREEN_RECT.bottom - 100        # 创建子弹精灵组        self.bullet_group = pygame.sprite.Group()    def update(self):        # 设置英雄在水平方向上移动        self.rect.x += self.speed        # 控制英雄的位置        if self.rect.x < 0:            self.rect.x = 0        elif self.rect.right > SCREEN_RECT.right:            self.rect.right = SCREEN_RECT.right    def fire(self):        # print('发射子弹...')        for x in (0, 1, 2):            # 创建子弹精灵            bullet = Bullet()            # 设置子弹的位置            bullet.rect.bottom = self.rect.y - x * 20            bullet.rect.centerx = self.rect.centerx            # 加入子弹精灵组            self.bullet_group.add(bullet)class Bullet(GameSprites):    """子弹精灵"""    def __init__(self):        # 调用父类的方法设置子弹图片，初始速度        super().__init__("./images/bullet1.png", -2)    def update(self):        # 调用父类方法，保持垂直方向飞行        super().update()        # 判断子弹是否飞出屏幕，若是，则从子弹精灵组中删除        if self.rect.bottom < 0:            self.kill()    # def __del__(self):    #     print('子弹被销毁...')